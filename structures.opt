method print_vec(vec)[];
method normalize(vec)[];

struct vec3 = {
  normalize = normalize;
  print = print_vec;
  X;
  Y;
  Z;
}

method print_vec(vec)[] =
  "< %lf, %lf, %lf>"
  | printf < vec.X, vec.Y, vec.Z;

sub normal_factor(vec)[] = 
  vec.X
  | square
  | add < square(vec.Y)
  | add < square(vec.Z)
  | inv_sqrt
  | >
  ;

method normalize(vec)[] = {
  
  vec.X < ~ | mult < normal_factor(vec) ;

  
  vec.Y < ~ | mult < normal_factor(vec) ;
  
  vec.Z < ~ | mult < normal_factor(vec) ;
  }

proc main: reg_vec = {
  reg_vec < new vec3;
  reg_vec.X < 4.5;
  reg_vec.Y < 9.1;
  reg_vec.Z < 3.3;
  
  reg_vec.normalize;
  reg_vec.print;
}
