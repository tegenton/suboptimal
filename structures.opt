struct vec3 = {
  normalize = normalize;
  X;
  Y;
  Z;
}

branch:4 sq3(val) =
  val
    |&3?
      |square
      | $0!
      |square
      | $1!
      |square
      | $2!
 ;

sub magnitude(vec) = 
  reg_vec.X
  | add reg_vec.Y
  | add reg_vec.Z
  | inv_sqrt
  | b3 ? } sum
  | sqrt;



proc normalize: reg_vec {
  reg_vec.X
  | div < magnitude < reg_vec
  |> reg_vec.X
  ;
  
  reg_vec.Y
  | div < magnitude < reg_vec
  |> reg_vec.Y
  ;
  
  reg_vec.Z
  | div < magnitude < reg_vec
  |> reg_vec.Z
  ;
  }

proc main: reg_vec = {
  reg_vec < new vec3;
  reg_vec.X < 4.5;
  reg_vec.Y < 9.1;
  reg_vec.Z < 3.3;
  
  reg_vec.normalize;
}
